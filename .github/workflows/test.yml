name: Pine City Zoo Website Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run HTML validation
      run: npm run test:html
    
    - name: Run CSS validation
      run: npm run test:css
    
    - name: Start local server
      run: |
        python3 -m http.server 8080 &
        sleep 3
    
    - name: Run accessibility tests
      run: npm run test:a11y
    
    - name: Run visual regression tests
      run: |
        # Create reference images if they don't exist
        if [ ! -d "backstop_data/bitmaps_reference" ] || [ -z "$(ls -A backstop_data/bitmaps_reference 2>/dev/null)" ]; then
          npm run test:visual:reference
        fi
        npm run test:visual
    
    - name: Upload visual test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: visual-test-results-${{ matrix.node-version }}
        path: backstop_data/html_report/
    
    - name: Upload accessibility test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: accessibility-results-${{ matrix.node-version }}
        path: pa11y-results.json

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Start local server
      run: |
        python3 -m http.server 8080 &
        sleep 3
    
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    
    - name: Upload Lighthouse results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-results
        path: .lighthouseci/
